#
# Copyright (c) 2007, 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Distribution License v. 1.0, which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: BSD-3-Clause
#

#
# General resources
#
exampleTitle=Example Application Index
pluginName=Tag Library Examples

#
# Help resources
#
help_windowTitle=Help - Example Application
help_mastheadAltText=Example Application: Tag Library Examples
help_tooltip=Help on Example Application (Opens a New Window)


#
# Primary masthead resources
#
mastheadAltText=Example Application: Tag Library Examples

#
# Index page resources
#
index_title=Example Application Index
index_summary=This example application demonstrates the User Interface Tag Library.
index_exampleHeader=Example
index_conceptsHeader=Description
index_filesHeader=Files
index_showCodeHeader=Example Source Code
index_noCode=No code to display
index_file=File: 
index_noFileName=No file name
index_breadcrumbMouseOver=Back to Example Application Index

index_buttonName=Button
index_buttonConcepts=Demonstration of button features, including the ability to dynamically enable and disable buttons.
index_alertName=Alert
index_alertConcepts=Demonstration of alert messages that notify users of a condition or error.
index_labelName=Label
index_labelConcepts=Demonstration of label features, including appropriate context-specific styles to use for a hierarchy of appearances with levels of visual weight.
index_cbrbName=Checkbox and Radio Button
index_cbrbConcepts=Demonstration of checkbox and radio button features.
index_textInputName=Text Input
index_textInputConcepts=Demonstration of text area, text field, and password features, including the ability to dynamically enable and disable them with client-side JavaScript technology.
index_tableName=Table
index_tableConcepts=Demonstration of table features, including the ability to page or scroll, sort table data, select items, choose actions, and view alarms.
index_addRemoveName=Add-and-Remove Idiom
index_addRemoveConcepts=Demonstration of add and remove features, including the ability to move list items between the Available list and the Selected list.
index_orderableListName=Orderable List
index_orderableListConcepts=Demonstration of the orderable list, which enables users to rearrange a list of elements.
index_chooserUploader=Chooser Uploader
index_chooserUploaderConcepts=Demonstration of File/Folder Chooser and file Uploader.
index_menuListName=Menu and List
index_menuListConcepts=Demonstration of drop-down menu and scrolling list features, including the ability to dynamically enable and disable them with client-side JavaScript technology.
index_mastheadName=Image and Masthead
index_mastheadConcepts=Demonstration of Image and Masthead features.
index_propertysheet=Property Sheet
index_propertySheetConcepts=Demonstration of Property Sheet.
index_editablelist=Editable List
index_editableListConcepts=Demonstration of Editable List.
index_pagetitleName=Content Page Title
index_pagetitleConcepts=Demonstration of content page title features, including page buttons, page actions, and page views.
index_hyperlink=Hyperlink
index_hyperlinkConcepts=Demonstration of Hyperlink features.
index_statictextName=Static Text
index_statictextConcepts=Demonstration of static text features, including date format masks and custom converter.
index_commonTaskName=Common Tasks Page
index_commonTaskConcepts=Demonstration of usage of common task components:commonTasksSection, commonTasksGroup and commonTask.
index_treeName=Tree
index_treeConcepts=Demonstration of dynamic and client side tree features, including event handling and tree based navigation.
index_progressBar=ProgressBar
index_progressBarConcepts=Demonstration of ProgressBar.
index_wizardName=Wizard
index_wizardConcepts=Demonstration of pop-up window Wizards.
#
# Resources for the Button example
#
button_alertElement=Element Selected
button_alertElementDetail=Element named {0} was selected and has a value of {1}.
button_alertElementDetailNoValue=Element named {0} was selected.
button_title=Button Example
button_alertElement=Element Selected
button_alertElementDetail=Element named {0} was selected and has a value of {1}.
button_alertElementDetailNoValue=Element named {0} was selected.
button_enable=Enable
button_disable=Disable
button_iconButtonLabel=Iconic Button:
button_iconButtonAlt=Iconic Button
button_iconButtonTooltip=Iconic Button
button_primaryButtonLabel=Primary Button:
button_primaryButtonText=Primary
button_primaryButtonTooltip=Primary Button
button_primaryMiniButtonLabel=Primary Mini-Button:
button_primaryMiniButtonText=Primary-Mini
button_primaryMiniButtonTooltip=Primary Mini-Button
button_secondaryButtonLabel=Secondary Button:
button_secondaryButtonText=Secondary
button_secondaryButtonTooltip=Secondary Button
button_secondaryMiniButtonLabel=Secondary Mini-Button:
button_secondaryMiniButtonText=Secondary-Mini
button_secondaryMiniButtonTooltip=Secondary Mini-Button
button_testCase_title=Test Cases
button_testCase_disableAll=Disable All
button_testCase_enableAll=Enable All
button_testCase_submit=Submit Page to Show State Is Maintained
button_resultsTitle=Button Example Results
button_breadcrumbMouseOver=Back to Button Example
button_resultsHelpText=Click the Back button to return to the Button example, and see that state is maintained.
button_backButton=Back
button_resultEnabled=The {0} button is enabled.
button_resultDisabled=The {0} button is disabled.

#
# Resources for the alert example
#
alert_title=Alert Example
alert_inlineTitle=Inline Alert Example
alert_inlineButton=Inline
alert_fullpageTitle=Full-Page Alert Example
alert_fullpageButton=Full Page
alert_tryAgain=Try Again
alert_tryAgainToolTip=Try to guess the number again
alert_backToExample=Back to Index
alert_backToExampleToolTip=Go back to the example Index
alert_line1Text=I am thinking of a number between 1 and 10 (inclusive). Can you guess the number in 3 attempts?
alert_guess=Guess:
alert_okButton=OK
alert_restartButton=Restart
alert_textFieldTitle=Number Entry Field
alert_number=The number was {0}.
alert_sumCongrats=Congratulations! You got it right!
alert_sumWrong=Game over. Better luck next time.
alert_sumLastChance=Incorrect Number! This is your last chance!
alert_sumTryAgain=Incorrect Number! Try again.
alert_sumException=You must type a number between 1 and 10!
alert_sumExceptionWithHelp=You must type a number between 1 and 10!<br/>Click the Try Again button to continue with this game or start a new one if this game is over.
alert_detHigher=Type a higher number. 
alert_detHigherLastChance=This is your last chance! Type a higher number.<br/>Click the Try Again button to continue with this game or start a new one if this game is over.
alert_detHigherTryAgain=Try again. Type a higher number.<br/>Click the Try Again button to continue with this game or start a new one if this game is over.
alert_detLower=Type a lower number.
alert_detLowerLastChance=This is your last chance! Type a lower number.<br/>Click the Try Again button to continue with this game or start a new one if this game is over.
alert_detLowerTryAgain=Try again. Type a lower number.<br/>Click the Try Again button to continue with this game or start a new one if this game is over.
alert_congratHeader=Congratulations!
alert_incorrectNumHeader=Incorrect Number!
alert_gameOverHeader=Game over. 
alert_number=The number was {0}.
alert_numberCongrats=You got it right! The number was {0}.<br/>Click the Try Again button to continue with this game or start a new one if this game is over.
alert_numberWrong=Better luck next time. The number was {0}.<br/>Click the Try Again button to continue with this game or start a new one if this game is over.
alert_breadcrumbMouseOver=Back to Alert Example Index
alert_helpLinkText=More on alert messages
alert_helpLinkTooltip=Help on Alert Example (Opens a New Window)
alert_helpLinkMouseOver=Help on Alert Example (Opens a New Window)
alert_helpWindowText=<p>The alert messages demonstration uses a game of "guess a number" to show how alert messages should appear to the user.</p>
alert_helpWindowTitle=Alert Messages
alert_close=Close

#
# Resources for the Label example
#
label_title=Label Example
label_pageHelp=Form elements are often organized hierarchically into groups and subgroups, and labels visually support this hierarchy. Groups have bolder, heavier labels. Individual elements within groups have lighter labels.
label_morePageHelp=More about the label example
label_pizza=Pizza Toppings (Level 1)
label_veggie=Vegetarian Toppings (Level 2)
label_meat=Meat Toppings
label_requiredLabel=Indicates required field
label_olives=Olives (Level 3)
label_mushrooms=Mushrooms (Level 3)
label_pepperoni=Pepperoni
label_sausage=Sausage
label_anchovies=Anchovies
label_noAnchovies=Anchovies not available!
label_phoneNumber=Phone Number:
label_phoneTooltip=For simplicity, any positive integer less than 1000 is a valid phone number.
label_address=Delivery Address:
label_addressTooltip=For simplicity, any value but \"XXX\" is a valid address.
label_invalidPhone=Phone number must be a positive integer less than 1000
label_invalidAddress=Delivery address cannot be {0}
label_orderButton=Place Order
label_resetButton=Reset
label_helpTooltip=Help on Label Example (Opens a New Window)
label_helpWindowTitle=Help - Label Example
label_helpWindowText=<p>The Label example shows how to hierarchically organize form elements into groups and subgroups, and to visually support this hierarchy.  Groups have bolder, heavier labels. Individual elements within groups have lighter labels.  Labels can indicate when user input is required and when validation of that input fails.</p>
label_close=Close
label_genericError=Please correct errors on the page.
label_resultsTitle=Label Example Results
label_breadcrumbMouseOver=Back to Label Example
label_resultsHelpText=Click the Back button to return to the Label example and order another pizza!
label_backButton=Back
label_plainPizza=Plain cheese pizza
label_toppingsPizza=Pizza with these toppings:
label_pepperoniResult=pepperoni
label_sausageResult=sausage
label_mushroomResult=mushrooms
label_oliveResult=olives
label_whereResult=Delivered to {0}, phone number {1}

#
# Resources for the Checkbox and Radiobutton example
#
cbrb_title=Checkbox and Radio Button Example
cbrb_checkboxLabel=Checkbox:
crcb_redCheckbox=Red
crcb_enable=Enable
cbrb_radiobuttonLabel=Radio Button:
cbrb_radiobuttonImagesLabel=Radio Button Image:
cbrb_radioButton1=Server
cbrb_radioButton2=Volume
cbrb_radioButton3=Pool
cbrb_resetButtonLabel=Reset
cbrb_testCase_title=Test Cases
cbrb_testCase_toggleCheckboxState=Toggle Enable/Disable State of Checkbox
cbrb_testCase_toggleRadiobuttonState=Toggle Enable/Disable State of RadioButton
cbrb_testCase_toggleRadiobuttonImageState=Toggle Enable/Disable State of RadioButton Image
cbrb_testCase_disableAll=Disable All
cbrb_testCase_enableAll=Enable All
cbrb_submitButtonLabel=Submit Page to Show State Is Maintained
cbrb_resultsTitle=Checkbox and Radio Button Example Results
cbrb_resultsHelpText=Click the Back button to return to the Checkbox and RadioButton example, and see that state is maintained.
cbrb_backButton=Back
cbrb_breadcrumbMouseOver=Back to Checkbox and RadioButton Example
cbrb_selected=selected
cbrb_notSelected=not selected
cbrb_disabled=disabled
cbrb_enabled=enabled
cbrb_result={0} {1} is {2} and {3}
cbrb_checkboxResult=Checkbox
cbrb_radioButtonResult=Radio Button
cbrb_radioButtonImageResult=Radio Button Image

#
# Resources for the Text Input example
#
field_title=Text Input Example
field_passwordLabel=Password:
field_passwordTitle=Password
field_passwordTitleDisabled=Password (Disabled)
field_textAreaLabel=Text Area:
field_textAreaTitle=Text Area
field_textAreaTitleDisabled=Text Area (Disabled)
field_textFieldLabel=Text Field:
field_textFieldTitle=Text Field
field_textFieldTitleDisabled=Text Field (Disabled)
field_disable=Disable
field_enable=Enable
field_testCaseTitle=Test Cases
field_testCaseToggleTextFieldState=Toggle Enable/Disable State of Text Input
field_testCaseTogglePasswordState=Toggle Enable/Disable State of Password
field_testCaseToggleTextAreaState=Toggle Enable/Disable State of Text Area
field_testCaseDisableAll=Disable All
field_testCaseEnableAll=Enable All
field_presetFieldsButton=Preset Fields
field_submitButton=Submit
field_resultsPageHelpText=Click the Back button to return to the Text Input example, and see that state is maintained.
field_resultsPageTitle=Text Input Results
field_breadcrumbMouseOver=Back to Text Input Example
field_backButton=Back
field_fieldResult={0} is {1} and has a value of {2}
field_disabled=disabled
field_enabled=enabled
field_dropDownToolTip=Select an Option

#
# Resources for the Table example
#
table_breadcrumbMouseOver=Back to Table Index
table_title=Table Index
table_mainTitle=Main Example
table_tableTitle=Table
table_tableConcepts=This example shows a sortable table with actions, filters, and preferences.
table_LastName=Last Name
table_FirstName=First Name
table_ActionDelete=Delete
table_Action1=Action 1
table_Action2=Action 2
table_Action3=Action 3
table_Action4=Action 4
table_ActionsMenuTitle=More Actions
table_Actions=Actions
table_taskStatus=Task Status
table_embeddedActionMsg=Embedded Action Selected: Parameter =
table_moreActionsMsg=More Actions Menu Selected
table_tableActionMsg=Table Action Selected
table_filterAllItems=All Items
table_filter1=Filter 1
table_filter2=Filter 2
table_filterCustom=Custom
table_customFilterLabel=Show only rows containing last name:
table_tldTitle=TLD Examples
table_actionsTitle=Actions
table_actionConcepts=This example shows how to add Actions using a JSF facet. In this example, four buttons and a drop down menu are added to the top and bottom table action bars. When the page is initially displayed, all actions are disabled. These actions are only enabled once the user has selected at least one checkbox. When the checkboxes are unselected (e.g., when clicking the deselect all button), actions are disabled again. When the user clicks on a checkbox, a Javascript function (named \"disable\") is invoked via the onClick event. The Javascript setTimeout function is used to ensure checkboxes are selected immediately, instead of waiting for the Javascript function to complete. See the \"Actions\" example class.
table_alarmsTitle=Alarms
table_alarmsConcepts=This example shows how to add alarms to table data cells.  The table data cell will appear highlighted when the alarm attribute of tableColumn is set to true. See the \"Name\" example class.
table_basicTitle=Basic Table
table_basicConcepts=This example shows how to create a basic table.
table_customTitle=Custom Title
table_customConcepts=This example shows how to create a custom table title. When using the title attribute, as shown in the Basic Table example, the component provides a default title implementation which may include information regarding paginated rows and applied filters. However, the developer may plug in their own components if desired using a JSF facet.
table_dynamicGroupTitle=Dynamic Group Table
table_dynamicGroupConcepts=This example shows how to create a binding to a backing bean to dynamically create a table layout. See the \"DynamicGroupTableBean\" example class.
table_dynamicTitle=Dynamic Table
table_dynamicConcepts=This example shows how to create a binding to a backing bean to dynamically create a group table layout. See the \"DynamicTableBean\" example class.
table_embeddedActionsTitle=Embedded Actions
table_embeddedActionsConcepts=This example shows how to add embedded actions to a table.  If the tableColumn component contains components used as embedded actions (e.g., add, delete, etc.), set the embeddedTableActions property to true and an action separator bar will appear between each child component per UI guidelines.
table_emptyCellsTitle=Empty Cells
table_embeddedActionsConcepts1=This example shows how to add an empty table cell icon (dash icon) when a table cell is inapplicable or unexpectedly empty. UI guidelines suggest not to use this for a value that is truly null, such as an empty alarm cell or a comment field which is blank, neither of which should have the icon. Further, the icon is not used for cells that contain user interface elements such as checkboxes or drop-down lists when these elements are not applicable. Instead, the elements are simply not displayed.
table_embeddedActionsConcepts2=Note: In this example, the emptyCell attribute is intentionally set to true every 5th row. However, it's up to the developer to decide how to test if the cell is truly empty. For example, you could use this syntax: emptyCell=\"# {name.value.last == null}\"
table_filterTitle=Filter
table_filterConcepts1=Basic filters are precanned options selectable via the filter drop down menu, which is defined by a JSF facet. For custom filters, the Filter panel is used. UI guidelines recommend adding a \"Custom Filter\" option to the basic options provided via the filter menu. When the \"Custom Filter\" menu is selected, an embedded panel in the table is opened, displaying facet contents provided by the developer. After the filter has been applied, UI guidelines recommend adding a \"Custom Filter Applied\" option indicating that a custom filter has been applied. Further, UI guidelines also state that the table title should indicate that a basic or custom filter has been applied. Thus, text is added to the table title via the filter attribute of the table tag.
table_filterConcepts2=Note: This functionality requires the filterId of the table component to be set. In addition, the selected value must be set as well to restore the default selected value when the embedded filter panel is closed.
table_groupTableTitle=Group Table
table_groupTableConcepts1=This example shows how to create groups of data in the same table. In a basic table, each column typically has a header and perhaps a footer. However, in a group table, each data group may have its own overall header and footer. Further, the table may display its own column footers and an overall footer below all data groups.
table_groupTableConcepts2=UI guidelines recommend that column headers and table column footers are only rendered once. Column headers typically appear at the the top of the table, above all row groups. And table column footers appear only at the bottom of the table, below all row groups. Therefore, the headerText and tableFooterText attributes only need to be defined for the first tableRowGroup component used in the table. Additional tableColumn attributes should be used for each tableRowGroup component to specify functionality, such as selectId and sort. This will allow column headers to sort on all row groups at once, for example. See the \"TableBean\" example class.
table_groupTableConcepts3=Note: UI guidelines recommend items should be unselected when no longer in view. Using the TableSelectPhaseListener object ensures that this scenario does not occur because state is cleared after the rendering phase. Although pagination is not used for a group table, we are still using the TableSelectPhaseListener object for this example. See \"Select\" example class.
table_tableFooter=Table Footer
table_groupFooter=Group Footer
table_groupHeader=Group Header
table_columnFooter=Column Footer
table_tableColumnFooter=Table Column Footer
table_alignedRight=Right-Aligned Text
table_hiddenSelectedRowsTitle=Hidden Selected Rows
table_hiddenSelectedRowsConcepts1=This example shows a column of checkbox components used to select multiple table rows. Dynamic row highlighting is set by invoking the initAllRows function when ever the state of the checkbox changes. This state is maintained via the selected attribute of the tableRowGroup tag.
table_hiddenSelectedRowsConcepts2=Note: UI guidelines recommend items should be unselected when no longer in view. However, there are cases when maintaining state across pages is necessary. When maintaining state, set the selectedRows attribute for the table tag. This will display text in the table title and footer indicating the number of selected rows hidden from view. See the \"Select\" example class.
table_liteTitle=Lite Table
table_liteConcepts=This example shows how to create a basic table that looks lighter weight, generally by omitting the shading around the table and in the title bar.
table_nestedColumnsTitle=Multiple Headers & Footers
table_nestedColumnsConcepts1=This example shows how the table behaves when columns are nested.
table_nestedColumnsConcepts2=Note:  Currently, only the footerText, headerText, and tableFooterText attributes of TableColumn are supported in this configuration.  Sorting is currently not supported for Multiple Headers & Footers.
table_paginatedTableTitle=Paginated Table
table_paginatedTableConcepts1=This example shows how to create a paginated table. The default number of rows to be displayed for a paginated table is 25 per page. However, the developer may override this value via the rows attribute.
table_paginatedTableConcepts2=Note: The rows attribute is used only for paginated tables.
table_preferencesTitle=Preferences
table_preferencesConcepts1=This example shows how to add Preferences via the Preferences panel. The Preferences panel toggle button is shown only when using a JSF facet. This button opens an embedded panel in the table, displaying facet contents provided by the developer.
table_preferencesConcepts2=In this example, the Preferences panel is used to set the number of paginated rows via the rows attribute of tableRowGroup. See the \"Preferences\" example class.
table_selectMultipleRowsTitle=Select Multiple Rows
table_selectMultipleRowsConcepts1=This example shows a column of checkbox components used to select multiple table rows. Dynamic row highlighting is set by invoking the initAllRows function when ever the state of the checkbox changes. This state is maintained via the selected attribute of the tableRowGroup tag. Note that this example does not maintain state across paginated pages.
table_selectMultipleRowsConcepts2=Note: UI guidelines recommend items should be unselected when no longer in view. Using the TableSelectPhaseListener object ensures that this scenario does not occur because state is cleared after the rendering phase.  See the \"Select" example class.
table_selectSingleRowTitle=Select Single Row
table_selectSingleRowConcepts1=This example shows a column of radiobutton components used to select a single table row. Dynamic row highlighting is set by invoking the initAllRows function when ever the state of the radiobutton changes. This state is maintained via the selected attribute of the tableRowGroup tag. Note that this example does not maintain state across paginated pages.
table_selectSingleRowConcepts2=Note: UI guidelines recommend items should be unselected when no longer in view. Using the TableSelectPhaseListener object ensures that this scenario does not occur because state is cleared after the rendering phase.  See the \"Select" example class.
table_spacerColumnTitle=Spacer Column
table_spacerColumnConcepts=When displaying properties for a single object, a property table might be useful. A property table typically includes two data columns. The first column identifies the properties of the object, and the second column displays the values for each of the properties. The remaining width of the table displays a third, blank column to keep the first two columns next to one another while still having the table fill the full screen width. Leave the column heading of the third and final column blank, and display no data in this column.  Set a value for the width attribute to achieve the desired spacing.
table_sortableTableTitle=Sortable Table
table_sortableTableConcepts1=This example shows how to add table sorting. Note that the value binding objects used when sorting must be the proper type. For example, when the String values \"2\" and \"11\" are sorted, \"11\" is displayed before \"2\". Instead, developers should sort using objects such as Number, Character, Date, Boolean, etc.
table_sortableTableConcepts2=Note: UI guidelines recommend not setting a default initial sort; however, developers may do so using the addSort(SortCriteria) method of TableRowGroup. When the table is rendered, data will be sorted and the primary sort column highlighted.
table_sortableTableConcepts3=Note: Either a FieldKey id or value binding may be used to define criteria for sorting the contents of TableDataProvider. However, when sorting a column of checkboxes/radiobuttons, a value binding must be used because values are external to the data (i.e., TableDataProvider does not contain FieldKey ids for a selected checkbox value).
table_ok=OK
table_cancel=Cancel

#
# Resources for the Add Remove example
#
addremove_title=Add-and-Remove Idiom Example
addremove_selectAuthors=Favorite Authors
addremove_selectBooks=Favorite Books
addremove_available=Available:
addremove_selected=Selected:
addremove_breadcrumbMouseOver=Back to Add-and-Remove Idiom Example
addremove_resultsTitle=Add-and-Remove Idiom Example Results
addremove_author1=Richard Russo
addremove_author2=Harper Lee
addremove_author3=Ernest Hemingway
addremove_author4=John Steinbeck
addremove_author5=Michael Cunningham
addremove_author6=Michael Chabon
addremove_author7=Frank McCourt
addremove_author8=Thornton Wilder
addremove_author9=Philip Roth
addremove_author10=Michael Shaara
addremove_author1v=Robin Moore
addremove_author2v=Lt Gen Harold Moore
addremove_author3v=Ron Smith
addremove_author4v=Tammy Bruce
addremove_author5v=William J. O'Neill
addremove_author6v=Dennis Smith
addremove_author7v=James McPherson
addremove_author8v=Fredrick Downs
addremove_author9v=Joseph Horrigan and Luc Robataille
addremove_author10v=Danna Scott
addremove_book1=Empire Falls 
addremove_book2=To Kill a Mockingbird 
addremove_book3=The Old Man and the Sea 
addremove_book4=Grapes of Wrath 
addremove_book5=Hours 
addremove_book6=The Amazing Adventures of Kavalier and Clay 
addremove_book7=Angela's Ashes: A Memoir 
addremove_book8=Our Town: A Play in Three Acts 
addremove_book9=American Pastoral 
addremove_book10=The Killer Angels
addremove_book1v=The Hunt for Bin Laden - Task Force Dagger
addremove_book2v=We Were Soldiers Once... and Young
addremove_book3v=Yankees - A Century of Greatness
addremove_book4v=The Death of Right and Wrong
addremove_book5v=24 Essentials for Investment Success
addremove_book6v=Report from Ground Zero
addremove_book7v=Hallowed Ground: A Walk at Gettysburg
addremove_book8v=The Killing Zone - My Life in the Vietnam War
addremove_book9v=Strength, Conditioning and Injury Prevention for Hockey
addremove_book10v=Boxing - The Complete Guide to Training and Fitness
addremove_showVertical=Show Vertical Orientation
addremove_showHorizontal=Show Horizontal Orientation
addremove_testCaseMenuLabel=Select Test Case:
addremove_testCaseTitle=Actions
addremove_testCaseSetInitValues=Set Initial Selections
addremove_testCaseShowSelections=Show Selections
addremove_error=Selection Required
addremove_noAuthorSelection=Select at least one author.
addremove_noBookSelection=Select at least one book.
addremove_tableCaption=User Selections:
addremove_tableHeading1=Author
addremove_tableHeading2=Book Title
addremove_resultsHelpText=Click the Back button to return to the Add Remove example, and see that state is maintained.
addremove_backButton=Back
addremove_presetButton=Preset List
addremove_showItemsButton=Show Selected Items

#
# Resources for the Orderable List example
#
orderablelist_breadcrumbMouseOver=Back to Orderable List Example
orderablelist_title=Orderable List
orderablelist_helpTitle=What is your favorite flavor? Arrange the items in the list.
orderablelist_resultsTitle=Orderable List Results
orderablelist_resultsHelpText=Click the Back button to return to the Orderable List example, and see that state is maintained.
orderablelist_error=Error!
orderablelist_tableHeading=User Selections:
orderablelist_columnHeading=Flavors:
orderablelist_listHeading=Flavors:
orderablelist_resetButton=Reset Order
orderablelist_showItemsButton=Show Ordered Results
orderablelist_flavor1=Strawberry
orderablelist_flavor2=Vanilla
orderablelist_flavor3=Chocolate
orderablelist_flavor4=Coffee
orderablelist_flavor5=Black Raspberry
orderablelist_flavor6=Peach
orderablelist_flavor7=Chocolate Chip
orderablelist_flavor8=Mint Chocolate Chip
orderablelist_flavor9=Coconut Chocolate Chip
orderablelist_flavor10=Mocha Chip
orderablelist_flavor11=Butter Crunch
orderablelist_flavor12=Butter Pecan
orderablelist_flavor13=Maple Walnut
orderablelist_flavor14=Rocky Road
orderablelist_flavor15=Oreo Cookie
orderablelist_flavor16=Cookie Dough
orderablelist_flavor17=Mud Pie
orderablelist_backButton=Back

#
# Resources for the file uploader/chooser example
#
chooserUploaderIndex_fileUploaderhyperlink=File Uploader
chooserUploaderIndex_folderChooserhyperlink=Folder Chooser
chooserUploaderIndex_fileChooserhyperlink=File Chooser
chooserUploaderIndex_chooserUploaderhyperlink=Chooser and Uploader
chooserUploaderIndex_fileUploaderTooltip=File Uploader
chooserUploaderIndex_folderChooserTooltip=Folder Chooser
chooserUploaderIndex_fileChooserTooltip=File Chooser
chooserUploaderIndex_chooserUploaderTooltip=Chooser and Uploader
chooserUploaderIndex_fileUploaderText=File Uploader:
chooserUploaderIndex_folderChooserText=Folder Chooser:
chooserUploaderIndex_fileChooserText=File Chooser:
chooserUploaderIndex_chooserUploaderText=Chooser and Uploader:
chooserUploader_invalidDir=Invalid directory: You have specified invalid directory name.
chooserUploader_permissionDenied=Permission denied: You do not have write permission.
chooserUploderIndex_title=Chooser Uploader Example Index
chooseruploader_summary=Validator Exception
uploader_label=File uploader with popup window version of file/folder chooser.
uploader_textFieldlabel=Destination Directory on Server:
uploader_buttonTextFolder=Browse Server...
uploader_uploadLabel=Choose File to Upload:
uploader_uploadButtonCaption=Upload File
uploader_folderButtonToolTip=Browse Server
uploader_uploadButtonToolTip=Upload File
uploader_fileChooserText1=Click
uploader_fileChooserLink=File Chooser
uploader_fileChooserText2=to open filechooser popup window and you can view the uploaded file.
folderChooserPopup_title=Popup window version of Folder Chooser
folderChooser_buttonTooltip=Select Folder
folderChooser_buttonCaption=Select Folder
fileChooserPopup_closeButtonCaption=Close
fileChooserPopup_closeButtonTooltip=Close
folderChooser_textLabel=Selected Folder:
fileChooserPopup_title=Popup window version of File Chooser
uploader_fileChooserLinkTooltip=File Chooser
uploader_textFieldTooltip=Directory to upload File
uploaderPopup_title=Chooser and Uploader 
chooserUploader_title=Chooser Uploader Example Index
chooserUploader_breadcrumbMouseOver=Back to Chooser Uploader Example
fileChooser_title=File Chooser
fileChooser_chooseButtonCaption=Choose File
fileChooser_chooseButtonCaptionTooltip=Choose File(s)
fileChooser_chooseFileText=Selected File(s) Path:
fileChooser_emptyFieldAlert=No File Selected!
uploader_title=File Uploader
fileUploader_chooseFileText=File Uploaded To:
fileUploader_title=File Uploader
folderChooser_title=Folder Chooser
folderChooser_chooseButtonCaption=Choose Folder
folderChooser_chooseButtonCaptionTooltip=Choose Folder
folderChooser_choosefolderText=Selected Folder Path:
folderChooser_emptyFieldAlert=No Folder Selected!
chooserUploader_invalidFile=Empty File: Specified file is of zero size.

#
# Resources for the Menu and List example.
#
menu_title=Menu and List Example
menu_alertElement=Element Selected
menu_alertElementDetail=Element named {0} was selected and has a value of {1}.
menu_enable=Enable
menu_enableOption=Enable 'Option A'
menu_jumpMenuHelp=Used for action menus that do not use a Go button to initiate actions.
menu_jumpMenuLabel=Jump Menu:
menu_jumpMenuTitle=Jump Menu
menu_jumpMenuTitleDisabled=Jump Menu (Disabled)
menu_standardMenuHelp=Enables the user to choose a value, and then initiate an action when data entry is complete.
menu_standardMenuLabel=Standard Menu:
menu_standardMenuTitle=Standard Menu
menu_standardMenuTitleDisabled=Standard Menu (Disabled)
menu_selectableListLabel=Scrolling List:
menu_selectableListTitle=Scrolling List
menu_selectableListTitleDisabled=Scrolling List (Disabled)
menu_option0=(No Option)
menu_option1=Option 1
menu_option2=Option 2
menu_option3=Option 3
menu_option4=Option 4
menu_option5=Option 5
menu_option6=Option 6
menu_optiona=Option A
menu_optionb=Option B
menu_optionc=Option C
menu_optiond=Option D
menu_optione=Option E
menu_optionf=Option F
menu_option1Disabled=Option 1 (Disabled)
menu_option2Disabled=Option 2 (Disabled)
menu_option3Disabled=Option 3 (Disabled)
menu_option4Disabled=Option 4 (Disabled)
menu_option5Disabled=Option 5 (Disabled)
menu_option6Disabled=Option 6 (Disabled)
menu_optionaDisabled=Option A (Disabled)
menu_optionbDisabled=Option B (Disabled)
menu_optioncDisabled=Option C (Disabled)
menu_optiondDisabled=Option D (Disabled)
menu_optioneDisabled=Option E (Disabled)
menu_optionfDisabled=Option F (Disabled)
menu_optionGroup1=Option Group 1
menu_optionGroup2=Option Group 2
menu_action0=Actions
menu_action1=Action 1
menu_action2=Action 2
menu_action3=Action 3
menu_action4=Action 4
menu_action5=Action 5
menu_action6=Action 6
menu_actiona=Action A
menu_actionb=Action B
menu_actionc=Action C
menu_actiond=Action D
menu_actione=Action E
menu_actionf=Action F
menu_action1Disabled=Action 1 (Disabled)
menu_action2Disabled=Action 2 (Disabled)
menu_action3Disabled=Action 3 (Disabled)
menu_action4Disabled=Action 4 (Disabled)
menu_action5Disabled=Action 5 (Disabled)
menu_action6Disabled=Action 6 (Disabled)
menu_actionaDisabled=Action A (Disabled)
menu_actionbDisabled=Action B (Disabled)
menu_actioncDisabled=Action C (Disabled)
menu_actiondDisabled=Action D (Disabled)
menu_actioneDisabled=Action E (Disabled)
menu_actionfDisabled=Action F (Disabled)
menu_actionGroup1=Action Group 1
menu_actionGroup2=Action Group 2
menu_testCase0=Test Cases
menu_testCase1=Disable Menus and List
menu_testCase2=Disable Menu and List Options
menu_testCase3=Enable Menus and List
menu_testCase4=Enable Menu and List Options
menu_warning=UI guidelines specify that state is not maintained for disabled options.
menu_breadcrumbMouseOver=Back to Menu and List Example
menu_backButton=Back
menu_submitButton=Submit List and Menu Selections
menu_resultsPageTitle=Menu and List Selections
menu_resultsPageHelpText=Click the Back button to return to the Menu and List example, and see that state is maintained.
menu_resultsPageSelectionLabel=The values of the options you selected are: 
menu_staticText=The value of the selected option is
menu_noOption=No option is selected.

#
# Resources for the Image and Masthead example
#
masthead_title=Image and Masthead Example
masthead_titleToolTip=Back to Image and Masthead Index
masthead_masthead1Title=Masthead with Attributes
masthead_masthead2Title=Masthead with Facets
masthead_masthead3Title=Images and ImageHyperlink
masthead_breadcrumbMouseOver=Back to Image and Masthead Index
masthead_title1ToolTip=Back to Masthead with Attributes page
masthead_title2ToolTip=Back to Masthead with Facets page
masthead_pageTitle1=Primary Masthead with Attributes
masthead_helpText1=This example shows the use of the &lt;ui:masthead&gt; tag with values being assigned to its various attributes.<br/>This example does not make use of the facets available with the masthead component to specify the status area content.
masthead_pageTitle2=Masthead with Status Area Facet
masthead_helpText2=This example shows the use of the &lt;ui:masthead&gt; tag which employs facets to specify the status area content.
masthead_pageTitle3=Images and ImageHyperlink
masthead_helpText3=This example shows the use of the &lt;ui:image&gt; and &lt;ui:imageHyperlink&gt; tags.
masthead_pageTitle4=Pop up window with a Secondary Masthead
masthead_helpText4=This example shows the use of &lt;ui:masthead&gt; tag to display a Secondary Masthead.
masthead_toolTip1=Masthead with Attributes
masthead_toolTip2=Masthead with Facets 
masthead_toolTip3=Images and ImageHyperlink
masthead_consoleLink=Console Link
masthead_versionLink=Display Product Version.(Open a new window)
masthead_logoutLink=Logout of this session
masthead_helpLink=Help Link
masthead_link=Link to Secondary Masthead
masthead_linkToolTip=Opens a Popup window with a Secondary Masthead
masthead_notificationmsg=Task Completed
masthead_cb1Text=Show Notification Info in Masthead
masthead_cb2Text=Show Jobs Running Info in Masthead
masthead_cb3Text=Show Timestamp Info in Masthead
masthead_cb4Text=Show Current Alarms in Masthead
masthead_selectOptions=Select Masthead Options:
masthead_buttonText=Update Masthead
masthead_buttonToolTip=Update Masthead
masthead_popuptitle=Pop up
masthead_closeButton=Close
masthead_closeButtonToolTip=Closes this window
masthead_versiontitle=Version Page
masthead_version=Version 1.0 beta
masthead_copyright=This is where your application copyright notice would appear.
masthead_label1=Example of an image:
masthead_label2=Example of Theme Specific Images:
masthead_label3=Example of an ImageHyperlink:
masthead_imageAltText=Image
masthead_imageToolTip=This is an image
masthead_imageDesc=This is an example of an image icon
masthead_imageMouseOver=The mouse is over the image
masthead_imageMouseOut=The mouse is outside the image
masthead_imageOnClick=The image has been clicked
masthead_imagehyperlinkToolTip=Click to go to www.sun.com
masthead_utilityLink1Text=Sun's Home Page
masthead_utilityLink1ToolTip=Click to open www.sun.com in a new window
masthead_utilityLink2Text=SDN Home
masthead_utilityLink2ToolTip=Click to go to developers.sun.com
masthead_helpLinkClicked=Help link was clicked.
masthead_logoutLinkClicked=Logout link was clicked.
masthead_versionLinkClicked=Version link was clicked.
masthead_consoleLinkClicked=Console link was clicked.
masthead_notificationClicked=The Masthead's Notification message was clicked.
masthead_jobStatusClicked=The Masthead's Job Status href was clicked.
masthead_alarmClicked=The Masthead's Alarm Count href was clicked.
masthead_criticalalarmClicked=The critical count was clicked.
masthead_majoralarmClicked=The major count was clicked.
masthead_minoralarmClicked=The minor count was clicked.
masthead_resultTitle=Image and Masthead Example Result
masthead_backButton=Back

#
# Resources for property sheet example
#
propertysheet_title=Property Sheet Example
propertysheet_Okbutton=OK
propertysheet_CancelButton=Cancel
propertysheet_textField=Text Field Section
propertysheet_userIdLabel=User ID:
propertysheet_passwordLabel=Password:
propertysheet_chooser=File/Folder Chooser Section
propertysheet_chooseFile=Choose File(s):
propertysheet_orderable=Orderable List Section
propertysheet_addremove=Add - Remove Section
propertysheet_chooseFolder=Choose Folder:
propertysheet_table=Table Section
propertysheet_tableBasic=Basic Table:
propertysheet_pageConfig=Page Configuration
propertysheet_jumpLink=Jump Links:
propertysheet_jumpLinkHelp=Turn on or off the jump links shown at the top of the page. Select or deselect the checkbox. Then, click OK
propertysheet_required=Required Field:
propertysheet_requiredHelp=Turn on or off the required field label shown at the top of the page. Select or deselect the checkbox. Then, click OK
propertysheet_jumpChkBox=Show Jump Links and Back-to-Top Links
propertysheet_requiredChkBox=Show Required Field label
propertysheet_orederableHeading=Flavors
propertysheet_fileChoosertext=File Chooser
propertysheet_folderChoosertext=Folder Chooser
propertysheet_redisplayButton=Redisplay
propertysheet_resulttitle=Property Sheet Result Page
propertysheet_resultlabel=User ID:
propertysheet_backButton=Back

#
# Resources for the editable list example
#
editablelist_title=Editable List Example
editablelist_Okbutton=OK
editablelist_fieldlabel=Assign Role:
editablelist_listlabel=User's Role
editalbelist_toolTip=List of roles for user
editablelist_chkboxList=Set list on top
editablelist_chkboxSort=Set list sorted
editablelist_string=The string must consist of letters only.
editablelist_summary=Validator Exception
editablelist_labelText=Manage user roles by adding/removing roles.
editablelist_listvalidate=You must enter at least five items.
editablelist_redisplayButton=Redisplay
editablelist_resulttitle=Editable List Result Page
editablelist_resultlabel=Role's Assigned To User:
editablelist_helpText=Roles must consist of letters only.
editablelist_backButton=Back

#
# Resources for the Page Title example
#
pagetitle_title=Content Page Title Example
pagetitle_helpText=This example shows the use of the &lt;ui:contentPageTitle&gt; tag.
pagetitle_save=Save
pagetitle_reset=Reset
pagetitle_hyperlink=Go to www.sun.com
pagetitle_hyperlinkToolTip=Click to go to www.sun.com
pagetitle_dropDown=View:
pagetitle_label1=Name:
pagetitle_label2=Phone #:
pagetitle_elementClicked=Element Selected
pagetitle_saveClicked=PageButton with value Save was clicked.
pagetitle_resetClicked=PageButton with value Reset was clicked.
pagetitle_viewClicked=View menu was changed to value
pagetitle_view1=View 1
pagetitle_view2=View 2
pagetitle_view3=View 3
pagetitle_error=Error
pagetitle_detail=Name is a required field.

#
# Resources for the Hyperlink example
#
hyperlink_title=Hyperlink Example
hyperlink_textSubmit=Hyperlink that submits the form.
hyperlink_textlinkSubmit=Submit this Page
hyperlink_linkSubmittoolTip=Submit this Page
hyperlink_textPage=Hyperlink that goes to another page.
hyperlink_textlinkPage=Go to Mozilla.org
hyperlink_linkPagetoolTip=Go to Mozilla.org
hyperlink_textBody=Body of a hyperlink to render text with image.
hyperlink_textlinkBody=Go to Sun.com
hyperlink_imageTooltip=Go to Sun.Com
hyperlink_imageText=Go to Sun.Com
hyperlink_textImmediate=Hyperlink with immediate attribute set to true. No validation will happen for this page.
hyperlink_textlinkImmediate=Click here to check immediate attribute
hyperlink_linkImmediatetoolTip=Click here to check immediate attribute of hyperlink
hyperlink_textlabel=User Name:
hyperlink_resulttitle=Hyperlink Result Page
hyperlink_resultlabel=User Name:
hyperlink_resultname=User Name:
hyperlink_anchorlinktext=Go to Top
hyperlink_anchortoolTip=Go to Top
hyperlink_anchortext=Hyperlink as an anchor tag.
hyperlink_buttonok=OK
hyperlink_chkBoxlabel=Disable all hyperlinks
hyperlink_resultparam=Additional Request Parameter Value:
hyperlink_paramtext=When this link is clicked, the page will be submitted and the request parameter map will have one additional item in it.
hyperlink_paramlinktext=Click here to see additional request parameters on result page
hyperlink_paramlinktooltip=Click here to see additional request parameters on result page
hyperlink_imagelinktext=Image as hyperlink. 
hyperlink_checkboxHelptext=Select the checkbox to disable all hyperlinks and then click OK.
hyperlink_summary=Error
hyperlink_detail=A value is required for User Name.
hyperlink_disableButton=Disable All Hyperlinks
hyperlink_enableButton=Enable All Hyperlinks
hyperlink_imageTextHeading=Image Hyperlink With Text
hyperlink_pageHeading=Page Swap Hyperlink
hyperlink_imageHeading=Image Hyperlink
hyperlink_submitHeading=Submit Page Hyperlink
hyperlink_anchorHeading=Anchor Hyperlink
hyperlink_immediateHyperlink=Immediate Hyperlink
hyperlink_paramHeading=Parameterized Hyperlink
hyperlink_backButton=Back

#
# Resources for the Static Text example
#
statictext_title=Static Text Example
statictext_helpText=This example shows the use of the &lt;ui:staticText&gt; tag.
statictext_text=This is a staticText example
statictext_imageMouseOver=The mouse is over the staticText
statictext_imageMouseOut=The mouse is outside the staticText
statictext_imageOnClick=The staticText has been clicked
statictext_label=Static Text with Default Converter
statictext_helpText1=Static Text using default JSF converter to convert Date object to String.
statictext_label1=Date Mask 1 (yyyy.MM.dd G HH:mm:ss z):
statictext_label2=Date Mask 2 (MM/dd/yyyy HH:mm:ss z):  
statictext_label3=Date Mask 3 (MM/dd/yy):
statictext_label4=Static Text with Custom Converter
statictext_helpText2=Static Text using custom converter to convert an Employee object to String.
statictext_label5=Hover and Click
statictext_helpText3=Click/Move mouse over Static Text to see its value changing.
statictext_firstname=John
statictext_lastname=Dickson
statictext_designation=System Analyst
statictext_errorMessage1=Not a employee:
statictext_errorMessage2=Value must be of the format 'FirstName LastName Designation'

#
# Resources for the Common Tasks example.
#
commontask_title=Common Task components Example
commontask_task1=Understanding the 6920 systems
commontask_task2=Create a storage volume
commontask_task2infotitle=Create a storage volume
commontask_task2infotext=Creates a new storage volume on the disk. Specify all the necessary appropriate information to get the new storage volume up and running.
commontask_task3=Create a storage volume
commontask_task3infotitle=Create using a facet
commontask_task3infotext=This common task was created using the "taskAction" facet.
commontask_task4=Add a storage pool
commontask_task5=Reserve space store snapshot
commontask_task5infotitle=Reserve space store snapshot
commontask_task5infotext= Click on this task to reserve a space store snapshot. Select the disk on which you want the reservation to be done.
commontask_task6=Add a feature license
commontask_task7=Display License compliance
commontask_task7infotitle=Display License Compliance
commontask_task7infotext=Click on this task to see the licenses this webapp complies to. 
commontask_task8=Reserve a data snapshot
commontask_task9=Create a mirrored volume
commontask_task9infotitle=Create a mirrored volume
commontask_task9infotext=What: Understand the meanings and relationships among the system's storage elements. These include logical elements (storage domains, volumes, storage pools, virtual disks, and snapshots) and physical elements (storage arrays, storage trays and disks).
commontask_task10=Delete a custom storage profile
commontask_task10infotitle=Delete a custom storage profile
commontask_task10infotext=Select this task to delete a storage profile that you have created. Note that the default profile is always needed and cannot be deleted.
commontask_index=Return to example application index
commontask_group1=First time Use
commontask_group2=Configuration
commontask_group3=Licensing
commontask_group4=Copying data
commontask_group5=Example Application index
commontask_infolinktext=Click here to know more
commontask_infolinktextfacet=Replaced standard hyperlink with facet
commontask_infopanelfacet=This info panel was created using a facet. This facet has a panel group which contains an image and  static text component as children.
commontask_indexinfotitle=Index Page Navigation
commontask_indexinfotext=This link takes you back ot the home page from where you can navigate to other examples
commontask_closeButton=close
commontask_tasklaunch=A sample common task  window.
commontask_sampletitle=Sample task page

#
# Resources for the Tree example
#
tree_title=Tree Index
tree_dynamicTree=Dynamic tree example showing event handling
tree_navTree=Client side navigation tree example in a three frame layout
tree_dynamicTreeTitle=Dynamic Tree Example
tree_navTreeTitle=Navigation Tree Example
tree_breadcrumbMouseOver=Back to Tree Example Index
tree_alarmMajorTip=[Alarm:Major] {0}
tree_alarmMinorTip=[Alarm:Minor] {0}
tree_alarmDownTip=[Alarm:Down] {0}
tree_alarmCriticalTip=[Alarm:Critical] {0}
tree_alertSummary=Element Selected
tree_alertDetail=Element named {0} was selected and has a value of {1}.
tree_testCase_label=Select Test Case:
tree_testCase_title=Actions
tree_testCase_reload=Reload Page
tree_testCase_yoke34=Yoke to Node 34
tree_framesRequired=This page requires frames.  Alternatively, one could construct one or more pages to render the information without using frames.
tree_contentsTitle=Node Details
tree_nodeClicked= was selected
tree_contentBreadcrumbToolip=Click to select {0}

#
# Resources for the progressbar example
#
progressbar_title=ProgressBar Example
progressbar_example=ProgressBar Example Index
progressbar_exampleIndex=ProgressBar Example Index
progressbar_determinateText=Determinate ProgressBar
progressbar_busyText=Busy ProgressBar
progressbar_indeterminateText=Indeterminate ProgressBar
progressbar_description=Analyzing Host Barney
progressbar_pauseButton=Pause
progressbar_resumeButton=Resume
progressbar_cancelButton=Cancel
progressbar_toolTip_determinate=Determinate ProgressBar
progressbar_toolTip_indeterminate=Indeterminate ProgressBar
progressbar_toolTip_busy=Busy ProgressBar
progressbar_determinate=Determinate ProgressBar
progressbar_indeterminate=Indeterminate ProgressBar
progressbar_busy=Busy ProgressBar
progressbar_pausedText=Task Paused
progressbar_canceledText=Task Canceled
progressbar_completedText=Task Completed Successfully
progressbar_percentText=% complete
progressbar_backButton=Back
#
# Resources for the wizard examples
#
wiz_index_title=Pop-Up Wizard Window Example
wiz_index_popup1_desc=Example 1: This example uses a simple multi-step wizard to create a new user identity.
wiz_index_button1=Wizard Example 1
wiz_index_button1_tip=Create a new user with a simple wizard.
wiz_simple_title=Example of a Simple Wizard
wiz_user_title=Create a New User Account
wiz_simple_step1_summary=Enter identity and description
wiz_simple_step1_title=User Identity
wiz_simple_step1_detail=Enter new user name, description, and identifier.
wiz_simple_step1_help=User name must be alphanumeric and begin with a letter.  User identifier can be generated automatically or set to a number greater than 100.
wiz_user_username=User name:
wiz_user_userdesc=User desc:
wiz_user_uidChoiceText=User identity:
wiz_user_uidAutoGenerate=Auto generate
wiz_user_uidSet=Set explicitly
wiz_user_uid=User uid:
wiz_simple_step2_summary=Enter password information
wiz_simple_step2_title=User Password
wiz_simple_step2_detail=Enter new user password information.
wiz_simple_step2_help=Determine how the user password is set.  A password must be from 8 to 32 characters long consisting of alphabetical characters, numbers, and allowable special characters.  It must contain at least one upper-case, one lower-case, one numeric, and one of the special characters: ?!()[]
wiz_user_pswdChoiceText=Password option:
wiz_user_pswdLocked=Lock account
wiz_user_pswdFirstLogin=First login
wiz_user_pswdNow=Set now
wiz_user_pswdEnter1=Enter password:
wiz_user_pswdEnter2=Confirm password:
wiz_user_passwordSetting=Password setting:
wiz_simple_step3_summary=Enter user group information
wiz_simple_step3_title=User Groups
wiz_simple_step3_detail=Add new user to existing groups.
wiz_simple_step3_help=Set the primary group for the new user, and optionally add the user to one or more secondary groups.
wiz_user_primaryGroup=Primary group:
wiz_user_secondaryGroup=Secondary groups:
wiz_user_secGroupAvailable=Available groups:
wiz_user_secGroupSelected=Selected groups:
wiz_simple_step4_summary=Enter home directory information
wiz_simple_step4_title=User Home Directory
wiz_simple_step4_detail=Set home directory path for the new user.
wiz_simple_step4_help=Set the home directory server and directory path for the new user.  The server name must be a hostname on the network.  The directory path must be a fully qualified path.
wiz_user_homeserver=Server name:
wiz_user_homedir=Directory path:
wiz_user_homepath=Home directory:
wiz_simple_step5_summary=Confirm user information
wiz_simple_step5_title=Confirm Values
wiz_simple_step5_detail=Confirm that all values are correct before proceeding.
wiz_simple_step5_help=Confirm each user value before proceeding.  If a value is invalid, backup through the steps to reset that value.
wiz_simple_step6_summary=Result of adding new user
wiz_simple_step6_title=Results
wiz_simple_step6_detail=Result of adding new user
wiz_simple_step6_help=Shows the result of the operation for adding a new user.
wiz_simple_result=The user \"{0}\" was added successfully.
wiz_invalid_username_1=User name must begin with a lower case letter.
wiz_invalid_username_2=User name must be from 6 to 32 characters long.
wiz_invalid_username_3=User name contains non-alphabetic, non-numeric, or upper case character.
wiz_invalid_username_4=User name must begin with a lower-case alphabetic character.
wiz_invalid_userid_1=User identity UID is not a numeric value.
wiz_invalid_userid_2=User identity UID must be > 100 and < 65536.
wiz_missing_password=A password must be specified.
wiz_invalid_password_1=User password must be from 8 to 32 characters long.
wiz_invalid_password_2=User password must contain only alphabetic, numeric, or special characters.
wiz_invalid_password_3=User password must contain at least one lower case alphabetic character.
wiz_invalid_password_4=User password must contain at least one upper case alphabetic character.
wiz_invalid_password_5=User password must contain at least one numeric digit.
wiz_invalid_password_6=User password must contain at least one of the special characters \"{0}\".
wiz_missing_confirm=The password value must be confirmed.
wiz_invalid_confirm=User password confirmation is not the same password.
wiz_invalid_servername=Server name is an unknown host.
wiz_invalid_pathname=Home directory path is invalid.
wiz_inhelp_username=Enter 8 to 32 lower-case alphanumeric characters.
wiz_inhelp_useruid=Enter number from 100 to 65535.
wiz_inhelp_password=Enter 8 to 32 alphanumeric and special characters.
wiz_inhelp_confirm=Enter password again for confirmation.
wiz_inhelp_servername=Enter server host name.
